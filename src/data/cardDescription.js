import uuid from 'react-uuid';
import vcs from '../assets/images/Description/cvs.png';
import git from '../assets/images/Description/git.png';
import css from '../assets/images/Description/css.png';
import html from '../assets/images/Description/html.png';
import nodejs from '../assets/images/Description/nodejs.png';
import npm from '../assets/images/Description/npm.png';

const cardDescription = [
  {
    id: uuid(),
    title: 'Что такое система контроля версий и зачем она нужна',
    img: vcs,
    description: `
      Система контроля версий (VCS – Version Control System)
      – это система с помощью которой можно фиксировать
      изменения в файлах, и при необходимости возвращатся к
      ним.
      Git – одна из самых популярных распределенных систем.
      «Распределенность» заключается в том что у каждого
      разработчика находится полная копия проекта и все
      сразу могут работать, а на сервере лежит основной
      репозиторий.
`,
  },
  {
    id: uuid(),
    title: 'checkout, add, commit, pull, push. Основы ветвления и слияния',
    img: git,
    description: `
      Команда checkout используется с параметрами коммита,
      ветки и файла. А также с параметрами и без них.
      - git checkout “branch” – перемещает указатель HEAD на
      конец заданной ветки.
      - git add . – добавляет в индекс все файлы текущей
      директории.
      - git pull – загружает удаленное содержимое и сразу
      пытается изменить состояние локального репозитория,
      чтобы оно соответствовало этому содержимому(выполняет
      слияние).
      – git branch “new branch”(без перехода на new branch)
      или git checkout –b “new branch” (с переходом).
`,
  },
  {
    id: uuid(),
    title: 'Css: стили, классы, идентификаторы, селекторы, псевдоклассы, псевдоэлементы',
    img: css,
    description: `
    Стили определяют внешний вид html элементов.
      Связанные – через подключение внешнего файла со
      стилями.
      Глобальные – обьявленые в теге 'style' 
      Внутренние – обьявленые через атрибут 'style' в теге
      Идентификатор элемента задается через атрибут “id”, и
      должен быть уникален.
      Псевдоклассы определяют динамическое состояние
      элементов, которое изменяется с помощью действий
      пользователя.
      Псевдоэлементы позволяют задать стиль элементов не
      определённых в дереве элементов документа.
`,
  },
  {
    id: uuid(),
    title: 'Html: теги, структура html страницы, блочные и строчные элементы.',
    img: html,
    description: `
      HTML — стандартизированный язык разметки веб-страниц.
     страница должна содержать DOCTYPE и html.
      Списки бывают нумерованные (ol) и маркированные(ul),
      элементы списков – “li”.
      Табличное отображение информации осуществляется с
      помощью тега 'table'.
      Атрибут — используется для определения характеристик
      html-элемента.
      В html имеются теги для форматирования текста.
      W3c – организация, разрабатывающая и внедряющая
      технологические стандарты для Всемирной паутины.
`,
  },
  {
    id: uuid(),
    title: 'что такое nodejs, зачем он нужен и как устанавливать',
    img: nodejs,
    description: `
      Node.js — это JavaScript-окружение построенное на
      движке Chrome V8.

      Node выполняет действие на сервере. С помощью Node
      можно писать полноценные приложения. Node умеет
      работать с внешними библиотеками, вызывать команды из
      кода на JavaScript и выполнять роль веб-сервера.

      Для установки необходимо перейти на официальный сайт
      https://nodejs.org и на главной странице скачать
      последнюю стабильную версию для своей ОС.
`,
  },
  {
    id: uuid(),
    title: 'Что такое менеджер пакетов, установка npm',
    img: npm,
    description: `
      Менеджер пакетов — набор ПО позволяющего управлять
      процессом установки, удаления, настройки и обновления
      различных компонентов программного обеспечения.
      Npm идет в комплекте с node
`,
  },
];

export default cardDescription;
